
package packageB;

import javacard.framework.*;


public class Counter extends Applet implements MultiSelectable {

    final static byte COUNTOP = (byte)0x10;
    int counter = 0;

    private int totalAmount = 50;

    private Counter(){
        register();
    }

    public static void install(byte[] bArray,byte bOffset,byte bLength) {
        new Counter();
    }


    public void process(APDU apdu) {
        byte[] buffer = apdu.getBuffer();
        switch(buffer[ISO7816.OFFSET_INS]){
            case COUNTOP :
                getOpNo(apdu);
                break;
            default :
                ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
        }
    }

    private void getOpNo(APDU apdu){
        byte[] buf = apdu.getBuffer();
        counter++;
        buf[0] = counter ;
        apdu.setOutgoingAndSend((short)0, (short)1);
    }

    public boolean select() {
        return true;  
    }


    public void deselect() {
        
    }
}
public class CardRuntimeException extends RuntimeException
{
  private byte[] theSw = new byte[2];

  public CardRuntimeException(short reason)
  {
      theSw[0] = (byte) reason;
  }

  public short getReason()
  {
      return (short) theSw[0];
  }

  public void setReason(short reason)
  {
  }

  public static void throwIt(short reason)
    throws CardRuntimeException
  {

  }
}

public class ISOException extends CardRuntimeException
{
  public ISOException(short sw)
  {
    super(sw);
  }

  public static void throwIt(short sw)
    throws ISOException
  {
    throw new ISOException(sw);
  }
}

public class RuntimeException extends Exception
{
  public RuntimeException(){}
}

public class Exception extends Throwable
{
  public Exception(){}
}

public class Throwable extends Object implements Serializable
{
  public Throwable(){}
}
public class ISO7816 
{
  public static final short SW_NO_ERROR = -28672;
  public static final short SW_BYTES_REMAINING_00 = 24832;
  public static final short SW_WRONG_LENGTH = 26368;
  public static final short SW_SECURITY_STATUS_NOT_SATISFIED = 27010;
  public static final short SW_FILE_INVALID = 27011;
  public static final short SW_DATA_INVALID = 27012;
  public static final short SW_CONDITIONS_NOT_SATISFIED = 27013;
  public static final short SW_COMMAND_NOT_ALLOWED = 27014;
  public static final short SW_APPLET_SELECT_FAILED = 27033;
  public static final short SW_WRONG_DATA = 27264;
  public static final short SW_FUNC_NOT_SUPPORTED = 27265;
  public static final short SW_FILE_NOT_FOUND = 27266;
  public static final short SW_RECORD_NOT_FOUND = 27267;
  public static final short SW_INCORRECT_P1P2 = 27270;
  public static final short SW_WRONG_P1P2 = 27392;
  public static final short SW_CORRECT_LENGTH_00 = 27648;
  public static final short SW_INS_NOT_SUPPORTED = 27904;
  public static final short SW_CLA_NOT_SUPPORTED = 28160;
  public static final short SW_UNKNOWN = 28416;
  public static final short SW_FILE_FULL = 27268;
  public static final short SW_LOGICAL_CHANNEL_NOT_SUPPORTED = 26753;
  public static final short SW_SECURE_MESSAGING_NOT_SUPPORTED = 26754;
  public static final short SW_WARNING_STATE_UNCHANGED = 25088;
  public static final byte OFFSET_CLA = 0;
  public static final byte OFFSET_INS = 1;
  public static final byte OFFSET_P1 = 2;
  public static final byte OFFSET_P2 = 3;
  public static final byte OFFSET_LC = 4;
  public static final byte OFFSET_CDATA = 5;
  public static final byte CLA_ISO7816 = 0;
  public static final byte INS_SELECT = -92;
  public static final byte INS_EXTERNAL_AUTHENTICATE = -126;
}
