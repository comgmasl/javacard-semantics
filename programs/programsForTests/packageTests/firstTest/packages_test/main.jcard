
class Main
{
  
  byte command;  
  byte selectedApplet;
  byte selectedOption;
  byte sumInserted;
  APDU data = new APDU();
  
 
  
  public Main()
  { 

      initDefaultApplets();
      for(int i = 0; i < 1; i++){

        print("\n");
        print("\n");

        print("********************************************************************* \n");
        print("*                           REMINDER                                *\n");
        print("*      APDU COMMAND FORMAT: CLA INS P1 P2 Lc DataField Le           *\n");
        print("*********************************************************************");

        print("\n");
        print("\n");
      
        print("Inserting command: \n");
        print("CLA :");
        data.buffer[0] = receiveCommand(); 
        print("\n");
        print("INS :");  
        data.buffer[1] = receiveCommand();
        print("\n");
        print("P1 :");
        data.buffer[2] = receiveCommand();  
        print("\n");
        print("P2 :");
        data.buffer[3] = receiveCommand(); 
        print("\n");
        print("Lc (length of data) :");
        data.buffer[4] = receiveCommand(); 
        print("\n");
        int bytesReceived = 0;
        while (bytesReceived < data.buffer[4]){
          print("Data field :");
          data.buffer[5+bytesReceived] = receiveCommand(); 
          print("\n");
          ++bytesReceived;
        }         
        print("\n");
        print("Le (Expected response) :");
        data.buffer[5+bytesReceived] = receiveCommand();
        sendCommand();

      }
  }
  
  public void initDefaultApplets(){
    'assignDefaultAppletForChannel[0,0];
    'assignDefaultAppletForChannel[1,1];
    'openBasicLogicalChannel
  }
  
}
public class CardRuntimeException extends RuntimeException
{
  private byte[] theSw = new byte[2];

  public CardRuntimeException(short reason)
  {
      theSw[0] = (byte) reason;
  }

  public short getReason()
  {
      return (short) theSw[0];
  }

  public void setReason(short reason)
  {
  }

  public static void throwIt(short reason)
    throws CardRuntimeException
  {

  }
}

public class ISOException extends CardRuntimeException
{
  public ISOException(short sw)
  {
    super(sw);
  }

  public static void throwIt(short sw)
    throws ISOException
  {
    throw new ISOException(sw);
  }
}

public class RuntimeException extends Exception
{
  public RuntimeException(){}
}

public class Exception extends Throwable
{
  public Exception(){}
}

public class Throwable extends Object implements Serializable
{
  public Throwable(){}
}
public class ISO7816 
{
  public static final short SW_NO_ERROR = -28672;
  public static final short SW_BYTES_REMAINING_00 = 24832;
  public static final short SW_WRONG_LENGTH = 26368;
  public static final short SW_SECURITY_STATUS_NOT_SATISFIED = 27010;
  public static final short SW_FILE_INVALID = 27011;
  public static final short SW_DATA_INVALID = 27012;
  public static final short SW_CONDITIONS_NOT_SATISFIED = 27013;
  public static final short SW_COMMAND_NOT_ALLOWED = 27014;
  public static final short SW_APPLET_SELECT_FAILED = 27033;
  public static final short SW_WRONG_DATA = 27264;
  public static final short SW_FUNC_NOT_SUPPORTED = 27265;
  public static final short SW_FILE_NOT_FOUND = 27266;
  public static final short SW_RECORD_NOT_FOUND = 27267;
  public static final short SW_INCORRECT_P1P2 = 27270;
  public static final short SW_WRONG_P1P2 = 27392;
  public static final short SW_CORRECT_LENGTH_00 = 27648;
  public static final short SW_INS_NOT_SUPPORTED = 27904;
  public static final short SW_CLA_NOT_SUPPORTED = 28160;
  public static final short SW_UNKNOWN = 28416;
  public static final short SW_FILE_FULL = 27268;
  public static final short SW_LOGICAL_CHANNEL_NOT_SUPPORTED = 26753;
  public static final short SW_SECURE_MESSAGING_NOT_SUPPORTED = 26754;
  public static final short SW_WARNING_STATE_UNCHANGED = 25088;
  public static final byte OFFSET_CLA = 0;
  public static final byte OFFSET_INS = 1;
  public static final byte OFFSET_P1 = 2;
  public static final byte OFFSET_P2 = 3;
  public static final byte OFFSET_LC = 4;
  public static final byte OFFSET_CDATA = 5;
  public static final byte CLA_ISO7816 = 0;
  public static final byte INS_SELECT = -92;
  public static final byte INS_EXTERNAL_AUTHENTICATE = -126;
}
